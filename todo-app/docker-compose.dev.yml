services:
  app:
    image: hello-front-dev
    build:
      context: . # The context will pick this directory as the "build context"
      dockerfile: ./todo-frontend/dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend/:/usr/src/app/todo-frontend # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    container_name: hello-front-dev # This will name the container hello-front-dev
    environment:
      - VITE_BACKEND_URL=http://localhost:8080/api
  debug-helper:
    image: busybox
  server:
    image: todo-server
    build:
      context: . # The context will pick this directory as the "build context"
      dockerfile: ./todo-backend/dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-backend/:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    container_name: todo-server # This will name the container hello-front-dev
    environment: 
      - MONGO_URL=mongodb://the_username:the_password@mongodb:27017/the_database
      - REDIS_URL=redis://redis:6379
  mongo:
    image: mongo
    ports:
      - 3456:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: the_database
    volumes: 
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    container_name: mongodb
  redis:
      image: redis
      ports:
        - 6378:6379
      command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
      volumes: # Declare the volume
        - ./todo-backend/redis_data:/data
      container_name: redis
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app # wait for the frontend container to be started
      - server
      - mongo
      - redis